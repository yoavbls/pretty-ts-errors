name: CI
on:
  push:
    branches-ignore:
    - 'main'
  pull_request:
    branches:
    - 'main'
  workflow_call:

permissions: {}

defaults:
  run:
    shell: bash

env:
  development_node_version: 18.12.1

jobs:
  # On every push to every branch, lint.
  lint:
    name: 🔬 Lint
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🟩 Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.development_node_version }}
    - name: 🧱 Install build dependencies
      run: npm run setup
    - name: 🔬 Lint
      run: npm run lint

  # On a push to a non-trunk branch, do a "quick" test of the package.
  quick-test:
    name: 🧪 Quick Test
    if: ${{ github.event_name == 'push' && !(github.event.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🟩 Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.development_node_version }}
    - name: 🧱 Install build dependencies
      run: npm run setup
    - name: 🧪 Test
      run: npm run workflow_test

  # On a push to the trunk branch, or a PR (or manual dispatch), run the full
  # set of tests against the targeted supported major versions.
  full-test:
    name: 🧪 Full Test
    if: >- 
      ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.event.ref == 'refs/heads/main') }}
    runs-on: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        version: ['16', '18', '20']
        os: [ubuntu-latest] # TODO: stabilise macOS-latest, windows-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🟩 Set up Node ${{ matrix.version }}
      uses: actions/setup-node@v3
      with:
        node-version: '${{ matrix.version }}'
    - name: 🧱 Install build dependencies
      run: npm run setup
    - name: 🧪 Test
      run: npm run workflow_test

  # On a push to the trunk branch, or a PR (or manual dispatch), run the build
  # to confirm that the vsce build is happy.
  is-vsce-happy:
    name: 🧪 VSCE Test
    if: >- 
      ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.event.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🟩 Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.development_node_version }}
    - name: 🧱 Install build dependencies
      run: npm run setup
    - name: 🧪 Test
      run: npm run build

  # On a push to the trunk branch, or a PR (or manual dispatch), do a CodeQL analysis.
  codeql:
    name: 👨‍💻 CodeQL
    if: >- 
      ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.event.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 👨‍💻 Init CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        queries: +security-extended,security-and-quality
    - name: 🧱 Autobuild
      uses: github/codeql-action/autobuild@v2
    - name: 👨‍💻 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:javascript"
