{
  "1005": "'{0}' expected.",
  "1007": "The parser expected to find a '{1}' to match the '{0}' token here.",
  "1029": "'{0}' modifier must precede '{1}' modifier.",
  "1030": "'{0}' modifier already seen.",
  "1031": "'{0}' modifier cannot appear on class elements of this kind.",
  "1040": "'{0}' modifier cannot be used in an ambient context.",
  "1042": "'{0}' modifier cannot be used here.",
  "1044": "'{0}' modifier cannot appear on a module or namespace element.",
  "1055": "Type '{0}' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.",
  "1064": "The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<{0}>'?",
  "1070": "'{0}' modifier cannot appear on a type member.",
  "1071": "'{0}' modifier cannot appear on an index signature.",
  "1079": "A '{0}' modifier cannot be used with an import declaration.",
  "1089": "'{0}' modifier cannot appear on a constructor declaration.",
  "1090": "'{0}' modifier cannot appear on a parameter.",
  "1097": "'{0}' list cannot be empty.",
  "1100": "Invalid use of '{0}' in strict mode.",
  "1111": "Private field '{0}' must be declared in an enclosing class.",
  "1114": "Duplicate label '{0}'.",
  "1121": "Octal literals are not allowed. Use the syntax '{0}'.",
  "1149": "File name '{0}' differs from already included file name '{1}' only in casing.",
  "1155": "'{0}' declarations must be initialized.",
  "1156": "'{0}' declarations can only be declared inside a block.",
  "1192": "Module '{0}' has no default export.",
  "1205": "Re-exporting a type when '{0}' is enabled requires using 'export type'.",
  "1209": "Invalid optional chain from new expression. Did you mean to call '{0}()'?",
  "1210": "Code contained in a class is evaluated in JavaScript's strict mode which does not allow this use of '{0}'. For more information, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode.",
  "1212": "Identifier expected. '{0}' is a reserved word in strict mode.",
  "1213": "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode.",
  "1214": "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode.",
  "1215": "Invalid use of '{0}'. Modules are automatically in strict mode.",
  "1223": "'{0}' tag already specified.",
  "1224": "Signature '{0}' must be a type predicate.",
  "1225": "Cannot find parameter '{0}'.",
  "1226": "Type predicate '{0}' is not assignable to '{1}'.",
  "1227": "Parameter '{0}' is not in the same position as parameter '{1}'.",
  "1230": "A type predicate cannot reference element '{0}' in a binding pattern.",
  "1243": "'{0}' modifier cannot be used with '{1}' modifier.",
  "1245": "Method '{0}' cannot have an implementation because it is marked abstract.",
  "1248": "A class member cannot have the '{0}' keyword.",
  "1259": "Module '{0}' can only be default-imported using the '{1}' flag",
  "1261": "Already included file name '{0}' differs from file name '{1}' only in casing.",
  "1262": "Identifier expected. '{0}' is a reserved word at the top-level of a module.",
  "1267": "Property '{0}' cannot have an initializer because it is marked abstract.",
  "1269": "Cannot use 'export import' on a type or type-only namespace when '{0}' is enabled.",
  "1270": "Decorator function return type '{0}' is not assignable to type '{1}'.",
  "1271": "Decorator function return type is '{0}' but is expected to be 'void' or 'any'.",
  "1273": "'{0}' modifier cannot appear on a type parameter",
  "1274": "'{0}' modifier can only appear on a type parameter of a class, interface or type alias",
  "1277": "'{0}' modifier can only appear on a type parameter of a function, method or class",
  "1278": "The runtime will invoke the decorator with {1} arguments, but the decorator expects {0}.",
  "1279": "The runtime will invoke the decorator with {1} arguments, but the decorator expects at least {0}.",
  "1280": "Namespaces are not allowed in global script files when '{0}' is enabled. If this file is not intended to be a global script, set 'moduleDetection' to 'force' or add an empty 'export {}' statement.",
  "1281": "Cannot access '{0}' from another file without qualification when '{1}' is enabled. Use '{2}' instead.",
  "1282": "An 'export =' declaration must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type.",
  "1283": "An 'export =' declaration must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration.",
  "1284": "An 'export default' must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type.",
  "1285": "An 'export default' must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration.",
  "1289": "'{0}' resolves to a type-only declaration and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'import type' where '{0}' is imported.",
  "1290": "'{0}' resolves to a type-only declaration and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'export type { {0} as default }'.",
  "1291": "'{0}' resolves to a type and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'import type' where '{0}' is imported.",
  "1292": "'{0}' resolves to a type and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'export type { {0} as default }'.",
  "1329": "'{0}' accepts too few arguments to be used as a decorator here. Did you mean to call it first and write '@{0}()'?",
  "1339": "Module '{0}' does not refer to a value, but is used as a value here.",
  "1340": "Module '{0}' does not refer to a type, but is used as a type here. Did you mean 'typeof import('{0}')'?",
  "1359": "Identifier expected. '{0}' is a reserved word that cannot be used here.",
  "1360": "Type '{0}' does not satisfy the expected type '{1}'.",
  "1361": "'{0}' cannot be used as a value because it was imported using 'import type'.",
  "1362": "'{0}' cannot be used as a value because it was exported using 'export type'.",
  "1369": "Did you mean '{0}'?",
  "1376": "'{0}' was imported here.",
  "1377": "'{0}' was exported here.",
  "1389": "'{0}' is not allowed as a variable declaration name.",
  "1390": "'{0}' is not allowed as a parameter name.",
  "1393": "Imported via {0} from file '{1}'",
  "1394": "Imported via {0} from file '{1}' with packageId '{2}'",
  "1395": "Imported via {0} from file '{1}' to import 'importHelpers' as specified in compilerOptions",
  "1396": "Imported via {0} from file '{1}' with packageId '{2}' to import 'importHelpers' as specified in compilerOptions",
  "1397": "Imported via {0} from file '{1}' to import 'jsx' and 'jsxs' factory functions",
  "1398": "Imported via {0} from file '{1}' with packageId '{2}' to import 'jsx' and 'jsxs' factory functions",
  "1400": "Referenced via '{0}' from file '{1}'",
  "1402": "Type library referenced via '{0}' from file '{1}'",
  "1403": "Type library referenced via '{0}' from file '{1}' with packageId '{2}'",
  "1405": "Library referenced via '{0}' from file '{1}'",
  "1407": "Matched by include pattern '{0}' in '{1}'",
  "1411": "Output from referenced project '{0}' included because '{1}' specified",
  "1412": "Output from referenced project '{0}' included because '--module' is specified as 'none'",
  "1414": "Source from referenced project '{0}' included because '{1}' specified",
  "1415": "Source from referenced project '{0}' included because '--module' is specified as 'none'",
  "1417": "Entry point of type library '{0}' specified in compilerOptions",
  "1418": "Entry point of type library '{0}' specified in compilerOptions with packageId '{1}'",
  "1420": "Entry point for implicit type library '{0}'",
  "1421": "Entry point for implicit type library '{0}' with packageId '{1}'",
  "1422": "Library '{0}' specified in compilerOptions",
  "1425": "Default library for target '{0}'",
  "1428": "File is output of project reference source '{0}'",
  "1429": "File redirects to file '{0}'",
  "1435": "Unknown keyword or identifier. Did you mean '{0}'?",
  "1448": "'{0}' resolves to a type-only declaration and must be re-exported using a type-only re-export when '{1}' is enabled.",
  "1458": "File is ECMAScript module because '{0}' has field \"type\" with value \"module\"",
  "1459": "File is CommonJS module because '{0}' has field \"type\" whose value is not \"module\"",
  "1460": "File is CommonJS module because '{0}' does not have field \"type\"",
  "1471": "Module '{0}' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.",
  "1479": "The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import(\"{0}\")' call instead.",
  "1480": "To convert this file to an ECMAScript module, change its file extension to '{0}' or create a local package.json file with `{ \"type\": \"module\" }`.",
  "1481": "To convert this file to an ECMAScript module, change its file extension to '{0}', or add the field `\"type\": \"module\"` to '{1}'.",
  "1482": "To convert this file to an ECMAScript module, add the field `\"type\": \"module\"` to '{0}'.",
  "1484": "'{0}' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.",
  "1485": "'{0}' resolves to a type-only declaration and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.",
  "1487": "Octal escape sequences are not allowed. Use the syntax '{0}'.",
  "1488": "Escape sequence '{0}' is not allowed.",
  "1491": "'{0}' modifier cannot appear on a 'using' declaration.",
  "1492": "'{0}' declarations may not have binding patterns.",
  "1495": "'{0}' modifier cannot appear on an 'await using' declaration.",
  "1501": "This regular expression flag is only available when targeting '{0}' or later.",
  "1508": "Unexpected '{0}'. Did you mean to escape it with backslash?",
  "1531": "'\\{0}' must be followed by a Unicode property value expression enclosed in braces.",
  "1532": "There is no capturing group named '{0}' in this regular expression.",
  "1533": "This backreference refers to a group that does not exist. There are only {0} capturing groups in this regular expression.",
  "1536": "Octal escape sequences and backreferences are not allowed in a character class. If this was intended as an escape sequence, use the syntax '{0}' instead.",
  "1543": "Importing a JSON file into an ECMAScript module requires a 'type: \"json\"' import attribute when 'module' is set to '{0}'.",
  "1544": "Named imports from a JSON file into an ECMAScript module are not allowed when 'module' is set to '{0}'.",
  "2200": "The types of '{0}' are incompatible between these types.",
  "2201": "The types returned by '{0}' are incompatible between these types.",
  "2202": "Call signature return types '{0}' and '{1}' are incompatible.",
  "2203": "Construct signature return types '{0}' and '{1}' are incompatible.",
  "2204": "Call signatures with no arguments have incompatible return types '{0}' and '{1}'.",
  "2205": "Construct signatures with no arguments have incompatible return types '{0}' and '{1}'.",
  "2208": "This type parameter might need an `extends {0}` constraint.",
  "2209": "The project root is ambiguous, but is required to resolve export map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate.",
  "2210": "The project root is ambiguous, but is required to resolve import map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate.",
  "2300": "Duplicate identifier '{0}'.",
  "2301": "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor.",
  "2303": "Circular definition of import alias '{0}'.",
  "2304": "Cannot find name '{0}'.",
  "2305": "Module '{0}' has no exported member '{1}'.",
  "2306": "File '{0}' is not a module.",
  "2307": "Cannot find module '{0}' or its corresponding type declarations.",
  "2308": "Module {0} has already exported a member named '{1}'. Consider explicitly re-exporting to resolve the ambiguity.",
  "2310": "Type '{0}' recursively references itself as a base type.",
  "2311": "Cannot find name '{0}'. Did you mean to write this in an async function?",
  "2313": "Type parameter '{0}' has a circular constraint.",
  "2314": "Generic type '{0}' requires {1} type argument(s).",
  "2315": "Type '{0}' is not generic.",
  "2316": "Global type '{0}' must be a class or interface type.",
  "2317": "Global type '{0}' must have {1} type parameter(s).",
  "2318": "Cannot find global type '{0}'.",
  "2319": "Named property '{0}' of types '{1}' and '{2}' are not identical.",
  "2320": "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.",
  "2321": "Excessive stack depth comparing types '{0}' and '{1}'.",
  "2322": "Type '{0}' is not assignable to type '{1}'.",
  "2323": "Cannot redeclare exported variable '{0}'.",
  "2324": "Property '{0}' is missing in type '{1}'.",
  "2325": "Property '{0}' is private in type '{1}' but not in type '{2}'.",
  "2326": "Types of property '{0}' are incompatible.",
  "2327": "Property '{0}' is optional in type '{1}' but required in type '{2}'.",
  "2328": "Types of parameters '{0}' and '{1}' are incompatible.",
  "2329": "Index signature for type '{0}' is missing in type '{1}'.",
  "2330": "'{0}' and '{1}' index signatures are incompatible.",
  "2339": "Property '{0}' does not exist on type '{1}'.",
  "2341": "Property '{0}' is private and only accessible within class '{1}'.",
  "2343": "This syntax requires an imported helper named '{1}' which does not exist in '{0}'. Consider upgrading your version of '{0}'.",
  "2344": "Type '{0}' does not satisfy the constraint '{1}'.",
  "2345": "Argument of type '{0}' is not assignable to parameter of type '{1}'.",
  "2348": "Value of type '{0}' is not callable. Did you mean to include 'new'?",
  "2352": "Conversion of type '{0}' to type '{1}' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
  "2353": "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'.",
  "2354": "This syntax requires an imported helper but module '{0}' cannot be found.",
  "2365": "Operator '{0}' cannot be applied to types '{1}' and '{2}'.",
  "2367": "This comparison appears to be unintentional because the types '{0}' and '{1}' have no overlap.",
  "2368": "Type parameter name cannot be '{0}'.",
  "2372": "Parameter '{0}' cannot reference itself.",
  "2373": "Parameter '{0}' cannot reference identifier '{1}' declared after it.",
  "2374": "Duplicate index signature for type '{0}'.",
  "2375": "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.",
  "2379": "Argument of type '{0}' is not assignable to parameter of type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.",
  "2389": "Function implementation name must be '{0}'.",
  "2395": "Individual declarations in merged declaration '{0}' must be all exported or all local.",
  "2397": "Declaration name conflicts with built-in global identifier '{0}'.",
  "2403": "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'.",
  "2407": "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter, but here has type '{0}'.",
  "2411": "Property '{0}' of type '{1}' is not assignable to '{2}' index type '{3}'.",
  "2412": "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.",
  "2413": "'{0}' index type '{1}' is not assignable to '{2}' index type '{3}'.",
  "2414": "Class name cannot be '{0}'.",
  "2415": "Class '{0}' incorrectly extends base class '{1}'.",
  "2416": "Property '{0}' in type '{1}' is not assignable to the same property in base type '{2}'.",
  "2417": "Class static side '{0}' incorrectly extends base class static side '{1}'.",
  "2418": "Type of computed property's value is '{0}', which is not assignable to type '{1}'.",
  "2420": "Class '{0}' incorrectly implements interface '{1}'.",
  "2423": "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor.",
  "2425": "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function.",
  "2426": "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function.",
  "2427": "Interface name cannot be '{0}'.",
  "2428": "All declarations of '{0}' must have identical type parameters.",
  "2430": "Interface '{0}' incorrectly extends interface '{1}'.",
  "2431": "Enum name cannot be '{0}'.",
  "2437": "Module '{0}' is hidden by a local declaration with the same name.",
  "2438": "Import name cannot be '{0}'.",
  "2440": "Import declaration conflicts with local declaration of '{0}'.",
  "2441": "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module.",
  "2442": "Types have separate declarations of a private property '{0}'.",
  "2443": "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.",
  "2444": "Property '{0}' is protected in type '{1}' but public in type '{2}'.",
  "2445": "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.",
  "2446": "Property '{0}' is protected and only accessible through an instance of class '{1}'. This is an instance of class '{2}'.",
  "2447": "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.",
  "2448": "Block-scoped variable '{0}' used before its declaration.",
  "2449": "Class '{0}' used before its declaration.",
  "2450": "Enum '{0}' used before its declaration.",
  "2451": "Cannot redeclare block-scoped variable '{0}'.",
  "2454": "Variable '{0}' is used before being assigned.",
  "2456": "Type alias '{0}' circularly references itself.",
  "2457": "Type alias name cannot be '{0}'.",
  "2459": "Module '{0}' declares '{1}' locally, but it is not exported.",
  "2460": "Module '{0}' declares '{1}' locally, but it is exported as '{2}'.",
  "2461": "Type '{0}' is not an array type.",
  "2468": "Cannot find global value '{0}'.",
  "2469": "The '{0}' operator cannot be applied to type 'symbol'.",
  "2481": "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'.",
  "2484": "Export declaration conflicts with exported declaration of '{0}'.",
  "2488": "Type '{0}' must have a '[Symbol.iterator]()' method that returns an iterator.",
  "2490": "The type returned by the '{0}()' method of an iterator must have a 'value' property.",
  "2492": "Cannot redeclare identifier '{0}' in catch clause.",
  "2493": "Tuple type '{0}' of length '{1}' has no element at index '{2}'.",
  "2495": "Type '{0}' is not an array type or a string type.",
  "2497": "This module can only be referenced with ECMAScript imports/exports by turning on the '{0}' flag and referencing its default export.",
  "2498": "Module '{0}' uses 'export =' and cannot be used with 'export *'.",
  "2502": "'{0}' is referenced directly or indirectly in its own type annotation.",
  "2503": "Cannot find namespace '{0}'.",
  "2504": "Type '{0}' must have a '[Symbol.asyncIterator]()' method that returns an async iterator.",
  "2506": "'{0}' is referenced directly or indirectly in its own base expression.",
  "2507": "Type '{0}' is not a constructor function type.",
  "2509": "Base constructor return type '{0}' is not an object type or intersection of object types with statically known members.",
  "2513": "Abstract method '{0}' in class '{1}' cannot be accessed via super expression.",
  "2515": "Non-abstract class '{0}' does not implement inherited abstract member {1} from class '{2}'.",
  "2520": "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions.",
  "2527": "The inferred type of '{0}' references an inaccessible '{1}' type. A type annotation is necessary.",
  "2529": "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module containing async functions.",
  "2530": "Property '{0}' is incompatible with index signature.",
  "2536": "Type '{0}' cannot be used to index type '{1}'.",
  "2537": "Type '{0}' has no matching index signature for type '{1}'.",
  "2538": "Type '{0}' cannot be used as an index type.",
  "2539": "Cannot assign to '{0}' because it is not a variable.",
  "2540": "Cannot assign to '{0}' because it is a read-only property.",
  "2542": "Index signature in type '{0}' only permits reading.",
  "2547": "The type returned by the '{0}()' method of an async iterator must be a promise for a type with a 'value' property.",
  "2548": "Type '{0}' is not an array type or does not have a '[Symbol.iterator]()' method that returns an iterator.",
  "2549": "Type '{0}' is not an array type or a string type or does not have a '[Symbol.iterator]()' method that returns an iterator.",
  "2550": "Property '{0}' does not exist on type '{1}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{2}' or later.",
  "2551": "Property '{0}' does not exist on type '{1}'. Did you mean '{2}'?",
  "2552": "Cannot find name '{0}'. Did you mean '{1}'?",
  "2554": "Expected {0} arguments, but got {1}.",
  "2555": "Expected at least {0} arguments, but got {1}.",
  "2558": "Expected {0} type arguments, but got {1}.",
  "2559": "Type '{0}' has no properties in common with type '{1}'.",
  "2560": "Value of type '{0}' has no properties in common with type '{1}'. Did you mean to call it?",
  "2561": "Object literal may only specify known properties, but '{0}' does not exist in type '{1}'. Did you mean to write '{2}'?",
  "2564": "Property '{0}' has no initializer and is not definitely assigned in the constructor.",
  "2565": "Property '{0}' is used before being assigned.",
  "2568": "Property '{0}' may not exist on type '{1}'. Did you mean '{2}'?",
  "2570": "Could not find name '{0}'. Did you mean '{1}'?",
  "2575": "No overload expects {0} arguments, but overloads do exist that expect either {1} or {2} arguments.",
  "2576": "Property '{0}' does not exist on type '{1}'. Did you mean to access the static member '{2}' instead?",
  "2580": "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.",
  "2581": "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery`.",
  "2582": "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha`.",
  "2583": "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{1}' or later.",
  "2584": "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'.",
  "2585": "'{0}' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.",
  "2588": "Cannot assign to '{0}' because it is a constant.",
  "2591": "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node` and then add 'node' to the types field in your tsconfig.",
  "2592": "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery` and then add 'jquery' to the types field in your tsconfig.",
  "2593": "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.",
  "2594": "This module is declared with 'export =', and can only be used with a default import when using the '{0}' flag.",
  "2595": "'{0}' can only be imported by using a default import.",
  "2596": "'{0}' can only be imported by turning on the 'esModuleInterop' flag and using a default import.",
  "2597": "'{0}' can only be imported by using a 'require' call or by using a default import.",
  "2598": "'{0}' can only be imported by using a 'require' call or by turning on the 'esModuleInterop' flag and using a default import.",
  "2603": "Property '{0}' in type '{1}' is not assignable to type '{2}'.",
  "2604": "JSX element type '{0}' does not have any construct or call signatures.",
  "2606": "Property '{0}' of JSX spread attribute is not assignable to target property.",
  "2607": "JSX element class does not support attributes because it does not have a '{0}' property.",
  "2608": "The global type 'JSX.{0}' may not have more than one property.",
  "2610": "'{0}' is defined as an accessor in class '{1}', but is overridden here in '{2}' as an instance property.",
  "2611": "'{0}' is defined as a property in class '{1}', but is overridden here in '{2}' as an accessor.",
  "2612": "Property '{0}' will overwrite the base property in '{1}'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration.",
  "2613": "Module '{0}' has no default export. Did you mean to use 'import { {1} } from {0}' instead?",
  "2614": "Module '{0}' has no exported member '{1}'. Did you mean to use 'import {1} from {0}' instead?",
  "2615": "Type of property '{0}' circularly references itself in mapped type '{1}'.",
  "2616": "'{0}' can only be imported by using 'import {1} = require({2})' or a default import.",
  "2617": "'{0}' can only be imported by using 'import {1} = require({2})' or by turning on the 'esModuleInterop' flag and using a default import.",
  "2618": "Source has {0} element(s) but target requires {1}.",
  "2619": "Source has {0} element(s) but target allows only {1}.",
  "2620": "Target requires {0} element(s) but source may have fewer.",
  "2621": "Target allows only {0} element(s) but source may have more.",
  "2623": "Source provides no match for required element at position {0} in target.",
  "2624": "Source provides no match for variadic element at position {0} in target.",
  "2625": "Variadic element at position {0} in source does not match element at position {1} in target.",
  "2626": "Type at position {0} in source is not compatible with type at position {1} in target.",
  "2627": "Type at positions {0} through {1} in source is not compatible with type at position {2} in target.",
  "2628": "Cannot assign to '{0}' because it is an enum.",
  "2629": "Cannot assign to '{0}' because it is a class.",
  "2630": "Cannot assign to '{0}' because it is a function.",
  "2631": "Cannot assign to '{0}' because it is a namespace.",
  "2632": "Cannot assign to '{0}' because it is an import.",
  "2634": "'{0}' index signatures are incompatible.",
  "2635": "Type '{0}' has no signatures for which the type argument list is applicable.",
  "2636": "Type '{0}' is not assignable to type '{1}' as implied by variance annotation.",
  "2638": "Type '{0}' may represent a primitive value, which is not permitted as the right operand of the 'in' operator.",
  "2649": "Cannot augment module '{0}' with value exports because it resolves to a non-module entity.",
  "2650": "Non-abstract class expression is missing implementations for the following members of '{0}': {1} and {2} more.",
  "2652": "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead.",
  "2653": "Non-abstract class expression does not implement inherited abstract member '{0}' from class '{1}'.",
  "2654": "Non-abstract class '{0}' is missing implementations for the following members of '{1}': {2}.",
  "2655": "Non-abstract class '{0}' is missing implementations for the following members of '{1}': {2} and {3} more.",
  "2656": "Non-abstract class expression is missing implementations for the following members of '{0}': {1}.",
  "2658": "Type '{0}' provides no match for the signature '{1}'.",
  "2661": "Cannot export '{0}'. Only local declarations can be exported from a module.",
  "2662": "Cannot find name '{0}'. Did you mean the static member '{1}.{0}'?",
  "2663": "Cannot find name '{0}'. Did you mean the instance member 'this.{0}'?",
  "2664": "Invalid module name in augmentation, module '{0}' cannot be found.",
  "2665": "Invalid module name in augmentation. Module '{0}' resolves to an untyped module at '{1}', which cannot be augmented.",
  "2671": "Cannot augment module '{0}' because it resolves to a non-module entity.",
  "2672": "Cannot assign a '{0}' constructor type to a '{1}' constructor type.",
  "2673": "Constructor of class '{0}' is private and only accessible within the class declaration.",
  "2674": "Constructor of class '{0}' is protected and only accessible within the class declaration.",
  "2675": "Cannot extend a class '{0}'. Class constructor is marked as private.",
  "2678": "Type '{0}' is not comparable to type '{1}'.",
  "2680": "A '{0}' parameter must be the first parameter.",
  "2684": "The 'this' context of type '{0}' is not assignable to method's 'this' of type '{1}'.",
  "2686": "'{0}' refers to a UMD global, but the current file is a module. Consider adding an import instead.",
  "2687": "All declarations of '{0}' must have identical modifiers.",
  "2688": "Cannot find type definition file for '{0}'.",
  "2689": "Cannot extend an interface '{0}'. Did you mean 'implements'?",
  "2690": "'{0}' only refers to a type, but is being used as a value here. Did you mean to use '{1} in {0}'?",
  "2692": "'{0}' is a primitive, but '{1}' is a wrapper object. Prefer using '{0}' when possible.",
  "2693": "'{0}' only refers to a type, but is being used as a value here.",
  "2694": "Namespace '{0}' has no exported member '{1}'.",
  "2699": "Static property '{0}' conflicts with built-in property 'Function.{0}' of constructor function '{1}'.",
  "2702": "'{0}' only refers to a type, but is being used as a namespace here.",
  "2707": "Generic type '{0}' requires between {1} and {2} type arguments.",
  "2708": "Cannot use namespace '{0}' as a value.",
  "2709": "Cannot use namespace '{0}' as a type.",
  "2710": "'{0}' are specified twice. The attribute named '{0}' will be overwritten.",
  "2713": "Cannot access '{0}.{1}' because '{0}' is a type, but not a namespace. Did you mean to retrieve the type of the property '{1}' in '{0}' with '{0}[\"{1}\"]'?",
  "2715": "Abstract property '{0}' in class '{1}' cannot be accessed in the constructor.",
  "2716": "Type parameter '{0}' has a circular default.",
  "2717": "Subsequent property declarations must have the same type.  Property '{0}' must be of type '{1}', but here has type '{2}'.",
  "2718": "Duplicate property '{0}'.",
  "2719": "Type '{0}' is not assignable to type '{1}'. Two different types with this name exist, but they are unrelated.",
  "2720": "Class '{0}' incorrectly implements class '{1}'. Did you mean to extend '{1}' and inherit its members as a subclass?",
  "2724": "'{0}' has no exported member named '{1}'. Did you mean '{2}'?",
  "2725": "Class name cannot be 'Object' when targeting ES5 and above with module {0}.",
  "2726": "Cannot find lib definition for '{0}'.",
  "2727": "Cannot find lib definition for '{0}'. Did you mean '{1}'?",
  "2728": "'{0}' is declared here.",
  "2729": "Property '{0}' is used before its initialization.",
  "2732": "Cannot find module '{0}'. Consider using '--resolveJsonModule' to import module with '.json' extension.",
  "2733": "Property '{0}' was also declared here.",
  "2735": "Did you mean for '{0}' to be constrained to type 'new (...args: any[]) => {1}'?",
  "2736": "Operator '{0}' cannot be applied to type '{1}'.",
  "2739": "Type '{0}' is missing the following properties from type '{1}': {2}",
  "2740": "Type '{0}' is missing the following properties from type '{1}': {2}, and {3} more.",
  "2741": "Property '{0}' is missing in type '{1}' but required in type '{2}'.",
  "2742": "The inferred type of '{0}' cannot be named without a reference to '{1}'. This is likely not portable. A type annotation is necessary.",
  "2743": "No overload expects {0} type arguments, but overloads do exist that expect either {1} or {2} type arguments.",
  "2745": "This JSX tag's '{0}' prop expects type '{1}' which requires multiple children, but only a single child was provided.",
  "2746": "This JSX tag's '{0}' prop expects a single child of type '{1}', but multiple children were provided.",
  "2747": "'{0}' components don't accept text as child elements. Text in JSX has the type 'string', but the expected type of '{1}' is '{2}'.",
  "2748": "Cannot access ambient const enums when '{0}' is enabled.",
  "2749": "'{0}' refers to a value, but is being used as a type here. Did you mean 'typeof {0}'?",
  "2755": "No constituent of type '{0}' is callable.",
  "2756": "Not all constituents of type '{0}' are callable.",
  "2757": "Type '{0}' has no call signatures.",
  "2758": "Each member of the union type '{0}' has signatures, but none of those signatures are compatible with each other.",
  "2759": "No constituent of type '{0}' is constructable.",
  "2760": "Not all constituents of type '{0}' are constructable.",
  "2761": "Type '{0}' has no construct signatures.",
  "2762": "Each member of the union type '{0}' has construct signatures, but none of those signatures are compatible with each other.",
  "2763": "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but for-of will always send '{0}'.",
  "2764": "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array spread will always send '{0}'.",
  "2765": "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array destructuring will always send '{0}'.",
  "2766": "Cannot delegate iteration to value because the 'next' method of its iterator expects type '{1}', but the containing generator will always send '{0}'.",
  "2767": "The '{0}' property of an iterator must be a method.",
  "2768": "The '{0}' property of an async iterator must be a method.",
  "2772": "Overload {0} of {1}, '{2}', gave the following error.",
  "2782": "'{0}' needs an explicit type annotation.",
  "2783": "'{0}' is specified more than once, so this usage will be overwritten.",
  "2786": "'{0}' cannot be used as a JSX component.",
  "2787": "Its return type '{0}' is not a valid JSX element.",
  "2788": "Its instance type '{0}' is not a valid JSX element.",
  "2789": "Its element type '{0}' is not a valid JSX element.",
  "2792": "Cannot find module '{0}'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?",
  "2794": "Expected {0} arguments, but got {1}. Did you forget to include 'void' in your type argument to 'Promise'?",
  "2801": "This condition will always return true since this '{0}' is always defined.",
  "2802": "Type '{0}' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.",
  "2803": "Cannot assign to private method '{0}'. Private methods are not writable.",
  "2804": "Duplicate identifier '{0}'. Static and instance elements cannot share the same private name.",
  "2807": "This syntax requires an imported helper named '{1}' with {2} parameters, which is not compatible with the one in '{0}'. Consider upgrading your version of '{0}'.",
  "2811": "Initializer for property '{0}'",
  "2812": "Property '{0}' does not exist on type '{1}'. Try changing the 'lib' compiler option to include 'dom'.",
  "2813": "Class declaration cannot implement overload list for '{0}'.",
  "2817": "Property '{0}' has no initializer and is not definitely assigned in a class static block.",
  "2818": "Duplicate identifier '{0}'. Compiler reserves name '{1}' when emitting 'super' references in static initializers.",
  "2819": "Namespace name cannot be '{0}'.",
  "2820": "Type '{0}' is not assignable to type '{1}'. Did you mean '{2}'?",
  "2833": "Cannot find namespace '{0}'. Did you mean '{1}'?",
  "2835": "Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '{0}'?",
  "2838": "All declarations of '{0}' must have identical constraints.",
  "2839": "This condition will always return '{0}' since JavaScript compares objects by reference, not value.",
  "2840": "An interface cannot extend a primitive type like '{0}'. It can only extend other named object types.",
  "2842": "'{0}' is an unused renaming of '{1}'. Did you intend to use it as a type annotation?",
  "2843": "We can only write a type for '{0}' by adding a type for the entire parameter here.",
  "2844": "Type of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor.",
  "2845": "This condition will always return '{0}'.",
  "2846": "A declaration file cannot be imported without 'import type'. Did you mean to import an implementation file '{0}' instead?",
  "2849": "Target signature provides too few arguments. Expected {0} or more, but got {1}.",
  "2855": "Class field '{0}' defined by the parent class is not accessible in the child class via super.",
  "2859": "Excessive complexity comparing types '{0}' and '{1}'.",
  "2862": "Type '{0}' is generic and can only be indexed for reading.",
  "2863": "A class cannot extend a primitive type like '{0}'. Classes can only extend constructable values.",
  "2864": "A class cannot implement a primitive type like '{0}'. It can only implement other named object types.",
  "2865": "Import '{0}' conflicts with local value, so must be declared with a type-only import when 'isolatedModules' is enabled.",
  "2866": "Import '{0}' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled.",
  "2867": "Cannot find name '{0}'. Do you need to install type definitions for Bun? Try `npm i --save-dev @types/bun`.",
  "2868": "Cannot find name '{0}'. Do you need to install type definitions for Bun? Try `npm i --save-dev @types/bun` and then add 'bun' to the types field in your tsconfig.",
  "2874": "This JSX tag requires '{0}' to be in scope, but it could not be found.",
  "2875": "This JSX tag requires the module path '{0}' to exist, but none could be found. Make sure you have types for the appropriate package installed.",
  "2876": "This relative import path is unsafe to rewrite because it looks like a file name, but actually resolves to \"{0}\".",
  "2877": "This import uses a '{0}' extension to resolve to an input TypeScript file, but will not be rewritten during emit because it is not a relative path.",
  "2879": "Using JSX fragments requires fragment factory '{0}' to be in scope, but it could not be found.",
  "4000": "Import declaration '{0}' is using private name '{1}'.",
  "4002": "Type parameter '{0}' of exported class has or is using private name '{1}'.",
  "4004": "Type parameter '{0}' of exported interface has or is using private name '{1}'.",
  "4006": "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
  "4008": "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
  "4010": "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
  "4012": "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.",
  "4014": "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.",
  "4016": "Type parameter '{0}' of exported function has or is using private name '{1}'.",
  "4019": "Implements clause of exported class '{0}' has or is using private name '{1}'.",
  "4020": "'extends' clause of exported class '{0}' has or is using private name '{1}'.",
  "4021": "'extends' clause of exported class has or is using private name '{0}'.",
  "4022": "'extends' clause of exported interface '{0}' has or is using private name '{1}'.",
  "4023": "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.",
  "4024": "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.",
  "4025": "Exported variable '{0}' has or is using private name '{1}'.",
  "4026": "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4027": "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
  "4028": "Public static property '{0}' of exported class has or is using private name '{1}'.",
  "4029": "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4030": "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
  "4031": "Public property '{0}' of exported class has or is using private name '{1}'.",
  "4032": "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.",
  "4033": "Property '{0}' of exported interface has or is using private name '{1}'.",
  "4034": "Parameter type of public static setter '{0}' from exported class has or is using name '{1}' from private module '{2}'.",
  "4035": "Parameter type of public static setter '{0}' from exported class has or is using private name '{1}'.",
  "4036": "Parameter type of public setter '{0}' from exported class has or is using name '{1}' from private module '{2}'.",
  "4037": "Parameter type of public setter '{0}' from exported class has or is using private name '{1}'.",
  "4038": "Return type of public static getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4039": "Return type of public static getter '{0}' from exported class has or is using name '{1}' from private module '{2}'.",
  "4040": "Return type of public static getter '{0}' from exported class has or is using private name '{1}'.",
  "4041": "Return type of public getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4042": "Return type of public getter '{0}' from exported class has or is using name '{1}' from private module '{2}'.",
  "4043": "Return type of public getter '{0}' from exported class has or is using private name '{1}'.",
  "4044": "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.",
  "4045": "Return type of constructor signature from exported interface has or is using private name '{0}'.",
  "4046": "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.",
  "4047": "Return type of call signature from exported interface has or is using private name '{0}'.",
  "4048": "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.",
  "4049": "Return type of index signature from exported interface has or is using private name '{0}'.",
  "4050": "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
  "4051": "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.",
  "4052": "Return type of public static method from exported class has or is using private name '{0}'.",
  "4053": "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
  "4054": "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.",
  "4055": "Return type of public method from exported class has or is using private name '{0}'.",
  "4056": "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.",
  "4057": "Return type of method from exported interface has or is using private name '{0}'.",
  "4058": "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.",
  "4059": "Return type of exported function has or is using name '{0}' from private module '{1}'.",
  "4060": "Return type of exported function has or is using private name '{0}'.",
  "4061": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4062": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.",
  "4063": "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.",
  "4064": "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.",
  "4065": "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
  "4066": "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.",
  "4067": "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
  "4068": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4069": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.",
  "4070": "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
  "4071": "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4072": "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.",
  "4073": "Parameter '{0}' of public method from exported class has or is using private name '{1}'.",
  "4074": "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.",
  "4075": "Parameter '{0}' of method from exported interface has or is using private name '{1}'.",
  "4076": "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.",
  "4077": "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.",
  "4078": "Parameter '{0}' of exported function has or is using private name '{1}'.",
  "4081": "Exported type alias '{0}' has or is using private name '{1}'.",
  "4082": "Default export of the module has or is using private name '{0}'.",
  "4083": "Type parameter '{0}' of exported type alias has or is using private name '{1}'.",
  "4084": "Exported type alias '{0}' has or is using private name '{1}' from module {2}.",
  "4085": "Extends clause for inferred type '{0}' has or is using private name '{1}'.",
  "4091": "Parameter '{0}' of index signature from exported interface has or is using name '{1}' from private module '{2}'.",
  "4092": "Parameter '{0}' of index signature from exported interface has or is using private name '{1}'.",
  "4094": "Property '{0}' of exported anonymous class type may not be private or protected.",
  "4095": "Public static method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4096": "Public static method '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
  "4097": "Public static method '{0}' of exported class has or is using private name '{1}'.",
  "4098": "Public method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
  "4099": "Public method '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
  "4100": "Public method '{0}' of exported class has or is using private name '{1}'.",
  "4101": "Method '{0}' of exported interface has or is using name '{1}' from private module '{2}'.",
  "4102": "Method '{0}' of exported interface has or is using private name '{1}'.",
  "4103": "Type parameter '{0}' of exported mapped object type is using private name '{1}'.",
  "4104": "The type '{0}' is 'readonly' and cannot be assigned to the mutable type '{1}'.",
  "4105": "Private or protected member '{0}' cannot be accessed on a type parameter.",
  "4106": "Parameter '{0}' of accessor has or is using private name '{1}'.",
  "4107": "Parameter '{0}' of accessor has or is using name '{1}' from private module '{2}'.",
  "4108": "Parameter '{0}' of accessor has or is using name '{1}' from external module '{2}' but cannot be named.",
  "4109": "Type arguments for '{0}' circularly reference themselves.",
  "4111": "Property '{0}' comes from an index signature, so it must be accessed with ['{0}'].",
  "4112": "This member cannot have an 'override' modifier because its containing class '{0}' does not extend another class.",
  "4113": "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'.",
  "4114": "This member must have an 'override' modifier because it overrides a member in the base class '{0}'.",
  "4115": "This parameter property must have an 'override' modifier because it overrides a member in base class '{0}'.",
  "4116": "This member must have an 'override' modifier because it overrides an abstract method that is declared in the base class '{0}'.",
  "4117": "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'. Did you mean '{1}'?",
  "4118": "The type of this node cannot be serialized because its property '{0}' cannot be serialized.",
  "4119": "This member must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'.",
  "4120": "This parameter property must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'.",
  "4121": "This member cannot have a JSDoc comment with an '@override' tag because its containing class '{0}' does not extend another class.",
  "4122": "This member cannot have a JSDoc comment with an '@override' tag because it is not declared in the base class '{0}'.",
  "4123": "This member cannot have a JSDoc comment with an 'override' tag because it is not declared in the base class '{0}'. Did you mean '{1}'?",
  "4124": "Compiler option '{0}' of value '{1}' is unstable. Use nightly TypeScript to silence this error. Try updating with 'npm install -D typescript@next'.",
  "4125": "Each declaration of '{0}.{1}' differs in its value, where '{2}' was expected but '{3}' was given.",
  "4126": "One value of '{0}.{1}' is the string '{2}', and the other is assumed to be an unknown numeric value.",
  "5001": "The current host does not support the '{0}' option.",
  "5010": "File specification cannot end in a recursive directory wildcard ('**'): '{0}'.",
  "5012": "Cannot read file '{0}': {1}.",
  "5023": "Unknown compiler option '{0}'.",
  "5024": "Compiler option '{0}' requires a value of type {1}.",
  "5025": "Unknown compiler option '{0}'. Did you mean '{1}'?",
  "5033": "Could not write file '{0}': {1}.",
  "5051": "Option '{0} can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided.",
  "5052": "Option '{0}' cannot be specified without specifying option '{1}'.",
  "5053": "Option '{0}' cannot be specified with option '{1}'.",
  "5054": "A 'tsconfig.json' file is already defined at: '{0}'.",
  "5055": "Cannot write file '{0}' because it would overwrite input file.",
  "5056": "Cannot write file '{0}' because it would be overwritten by multiple input files.",
  "5057": "Cannot find a tsconfig.json file at the specified directory: '{0}'.",
  "5058": "The specified path does not exist: '{0}'.",
  "5059": "Invalid value for '--reactNamespace'. '{0}' is not a valid identifier.",
  "5061": "Pattern '{0}' can have at most one '*' character.",
  "5062": "Substitution '{0}' in pattern '{1}' can have at most one '*' character.",
  "5063": "Substitutions for pattern '{0}' should be an array.",
  "5064": "Substitution '{0}' for pattern '{1}' has incorrect type, expected 'string', got '{2}'.",
  "5065": "File specification cannot contain a parent directory ('..') that appears after a recursive directory wildcard ('**'): '{0}'.",
  "5066": "Substitutions for pattern '{0}' shouldn't be an empty array.",
  "5067": "Invalid value for 'jsxFactory'. '{0}' is not a valid identifier or qualified-name.",
  "5069": "Option '{0}' cannot be specified without specifying option '{1}' or option '{2}'.",
  "5072": "Unknown build option '{0}'.",
  "5073": "Build option '{0}' requires a value of type {1}.",
  "5075": "'{0}' is assignable to the constraint of type '{1}', but '{1}' could be instantiated with a different subtype of constraint '{2}'.",
  "5076": "'{0}' and '{1}' operations cannot be mixed without parentheses.",
  "5077": "Unknown build option '{0}'. Did you mean '{1}'?",
  "5078": "Unknown watch option '{0}'.",
  "5079": "Unknown watch option '{0}'. Did you mean '{1}'?",
  "5080": "Watch option '{0}' requires a value of type {1}.",
  "5081": "Cannot find a tsconfig.json file at the current directory: {0}.",
  "5082": "'{0}' could be instantiated with an arbitrary type which could be unrelated to '{1}'.",
  "5083": "Cannot read file '{0}'.",
  "5088": "The inferred type of '{0}' references a type with a cyclic structure which cannot be trivially serialized. A type annotation is necessary.",
  "5089": "Option '{0}' cannot be specified when option 'jsx' is '{1}'.",
  "5091": "Option 'preserveConstEnums' cannot be disabled when '{0}' is enabled.",
  "5092": "The root value of a '{0}' file must be an object.",
  "5093": "Compiler option '--{0}' may only be used with '--build'.",
  "5094": "Compiler option '--{0}' may not be used with '--build'.",
  "5095": "Option '{0}' can only be used when 'module' is set to 'preserve' or to 'es2015' or later.",
  "5097": "An import path can only end with a '{0}' extension when 'allowImportingTsExtensions' is enabled.",
  "5098": "Option '{0}' can only be used when 'moduleResolution' is set to 'node16', 'nodenext', or 'bundler'.",
  "5101": "Option '{0}' is deprecated and will stop functioning in TypeScript {1}. Specify compilerOption '\"ignoreDeprecations\": \"{2}\"' to silence this error.",
  "5102": "Option '{0}' has been removed. Please remove it from your configuration.",
  "5104": "Option '{0}' is redundant and cannot be specified with option '{1}'.",
  "5106": "Use '{0}' instead.",
  "5107": "Option '{0}={1}' is deprecated and will stop functioning in TypeScript {2}. Specify compilerOption '\"ignoreDeprecations\": \"{3}\"' to silence this error.",
  "5108": "Option '{0}={1}' has been removed. Please remove it from your configuration.",
  "5109": "Option 'moduleResolution' must be set to '{0}' (or left unspecified) when option 'module' is set to '{1}'.",
  "5110": "Option 'module' must be set to '{0}' when option 'moduleResolution' is set to '{1}'.",
  "6023": "Syntax: {0}",
  "6026": "Examples: {0}",
  "6029": "Version {0}",
  "6044": "Compiler option '{0}' expects an argument.",
  "6045": "Unterminated quoted string in response file '{0}'.",
  "6046": "Argument for '{0}' option must be: {1}.",
  "6048": "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'.",
  "6050": "Unable to open file '{0}'.",
  "6051": "Corrupted locale file {0}.",
  "6053": "File '{0}' not found.",
  "6054": "File '{0}' has an unsupported extension. The only supported extensions are {1}.",
  "6059": "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files.",
  "6064": "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'null' on command line.",
  "6082": "Only 'amd' and 'system' modules are supported alongside --{0}.",
  "6086": "======== Resolving module '{0}' from '{1}'. ========",
  "6087": "Explicitly specified module resolution kind: '{0}'.",
  "6088": "Module resolution kind is not specified, using '{0}'.",
  "6089": "======== Module name '{0}' was successfully resolved to '{1}'. ========",
  "6090": "======== Module name '{0}' was not resolved. ========",
  "6091": "'paths' option is specified, looking for a pattern to match module name '{0}'.",
  "6092": "Module name '{0}', matched pattern '{1}'.",
  "6093": "Trying substitution '{0}', candidate module location: '{1}'.",
  "6094": "Resolving module name '{0}' relative to base url '{1}' - '{2}'.",
  "6095": "Loading module as file / folder, candidate module location '{0}', target file types: {1}.",
  "6096": "File '{0}' does not exist.",
  "6097": "File '{0}' exists - use it as a name resolution result.",
  "6098": "Loading module '{0}' from 'node_modules' folder, target file types: {1}.",
  "6099": "Found 'package.json' at '{0}'.",
  "6100": "'package.json' does not have a '{0}' field.",
  "6101": "'package.json' has '{0}' field '{1}' that references '{2}'.",
  "6104": "Checking if '{0}' is the longest matching prefix for '{1}' - '{2}'.",
  "6105": "Expected type of '{0}' field in 'package.json' to be '{1}', got '{2}'.",
  "6106": "'baseUrl' option is set to '{0}', using this value to resolve non-relative module name '{1}'.",
  "6107": "'rootDirs' option is set, using it to resolve relative module name '{0}'.",
  "6108": "Longest matching prefix for '{0}' is '{1}'.",
  "6109": "Loading '{0}' from the root dir '{1}', candidate location '{2}'.",
  "6116": "======== Resolving type reference directive '{0}', containing file '{1}', root directory '{2}'. ========",
  "6119": "======== Type reference directive '{0}' was successfully resolved to '{1}', primary: {2}. ========",
  "6120": "======== Type reference directive '{0}' was not resolved. ========",
  "6121": "Resolving with primary search path '{0}'.",
  "6123": "======== Resolving type reference directive '{0}', containing file '{1}', root directory not set. ========",
  "6125": "Looking up in 'node_modules' folder, initial location '{0}'.",
  "6127": "======== Resolving type reference directive '{0}', containing file not set, root directory '{1}'. ========",
  "6128": "======== Resolving type reference directive '{0}', containing file not set, root directory not set. ========",
  "6130": "Resolving real path for '{0}', result '{1}'.",
  "6131": "Cannot compile modules using option '{0}' unless the '--module' flag is 'amd' or 'system'.",
  "6132": "File name '{0}' has a '{1}' extension - stripping it.",
  "6133": "'{0}' is declared but its value is never read.",
  "6137": "Cannot import type declaration files. Consider importing '{0}' instead of '{1}'.",
  "6138": "Property '{0}' is declared but its value is never read.",
  "6140": "Auto discovery for typings is enabled in project '{0}'. Running extra resolution pass for module '{1}' using cache location '{2}'.",
  "6142": "Module '{0}' was resolved to '{1}', but '--jsx' is not set.",
  "6144": "Module '{0}' was resolved as locally declared ambient module in file '{1}'.",
  "6147": "Resolution for module '{0}' was found in cache from location '{1}'.",
  "6148": "Directory '{0}' does not exist, skipping all lookups in it.",
  "6164": "Skipping module '{0}' that looks like an absolute URI, target file types: {1}.",
  "6182": "Scoped package detected, looking in '{0}'",
  "6183": "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}'.",
  "6184": "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'.",
  "6194": "Found {0} errors. Watching for file changes.",
  "6196": "'{0}' is declared but never used.",
  "6200": "Definitions of the following identifiers conflict with those in another file: {0}",
  "6202": "Project references may not form a circular graph. Cycle detected: {0}",
  "6203": "'{0}' was also declared here.",
  "6207": "'package.json' does not have a 'typesVersions' entry that matches version '{0}'.",
  "6208": "'package.json' has a 'typesVersions' entry '{0}' that matches compiler version '{1}', looking for a pattern to match module name '{2}'.",
  "6209": "'package.json' has a 'typesVersions' entry '{0}' that is not a valid semver range.",
  "6210": "An argument for '{0}' was not provided.",
  "6215": "Using compiler options of project reference redirect '{0}'.",
  "6217": "Found {0} errors.",
  "6218": "======== Module name '{0}' was successfully resolved to '{1}' with Package ID '{2}'. ========",
  "6219": "======== Type reference directive '{0}' was successfully resolved to '{1}' with Package ID '{2}', primary: {3}. ========",
  "6220": "'package.json' had a falsy '{0}' field.",
  "6229": "Tag '{0}' expects at least '{1}' arguments, but the JSX factory '{2}' provides at most '{3}'.",
  "6230": "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'false' or 'null' on command line.",
  "6231": "Could not resolve the path '{0}' with the extensions: {1}.",
  "6236": "Arguments for the rest parameter '{0}' were not provided.",
  "6239": "File '{0}' exists according to earlier cached lookups.",
  "6240": "File '{0}' does not exist according to earlier cached lookups.",
  "6241": "Resolution for type reference directive '{0}' was found in cache from location '{1}'.",
  "6242": "======== Resolving type reference directive '{0}', containing file '{1}'. ========",
  "6258": "'{0}' should be set inside the 'compilerOptions' object of the config json file",
  "6259": "Found 1 error in {0}",
  "6260": "Found {0} errors in the same file, starting at: {1}",
  "6261": "Found {0} errors in {1} files.",
  "6262": "File name '{0}' has a '{1}' extension - looking up '{2}' instead.",
  "6263": "Module '{0}' was resolved to '{1}', but '--allowArbitraryExtensions' is not set.",
  "6266": "Option '{0}' can only be specified on command line.",
  "6270": "Directory '{0}' has no containing package.json scope. Imports will not resolve.",
  "6271": "Import specifier '{0}' does not exist in package.json scope at path '{1}'.",
  "6272": "Invalid import specifier '{0}' has no possible resolutions.",
  "6273": "package.json scope '{0}' has no imports defined.",
  "6274": "package.json scope '{0}' explicitly maps specifier '{1}' to null.",
  "6275": "package.json scope '{0}' has invalid type for target of specifier '{1}'",
  "6276": "Export specifier '{0}' does not exist in package.json scope at path '{1}'.",
  "6278": "There are types at '{0}', but this result could not be resolved when respecting package.json \"exports\". The '{1}' library may need to update its package.json or typings.",
  "6280": "There are types at '{0}', but this result could not be resolved under your current 'moduleResolution' setting. Consider updating to 'node16', 'nodenext', or 'bundler'.",
  "6282": "Found peerDependency '{0}' with '{1}' version.",
  "6283": "Failed to find peerDependency '{0}'.",
  "6305": "Output file '{0}' has not been built from source file '{1}'.",
  "6306": "Referenced project '{0}' must have setting \"composite\": true.",
  "6307": "File '{0}' is not listed within the file list of project '{1}'. Projects must list all files or use an 'include' pattern.",
  "6310": "Referenced project '{0}' may not disable emit.",
  "6350": "Project '{0}' is out of date because output '{1}' is older than input '{2}'",
  "6351": "Project '{0}' is up to date because newest input '{1}' is older than output '{2}'",
  "6352": "Project '{0}' is out of date because output file '{1}' does not exist",
  "6353": "Project '{0}' is out of date because its dependency '{1}' is out of date",
  "6354": "Project '{0}' is up to date with .d.ts files from its dependencies",
  "6355": "Projects in this build: {0}",
  "6356": "A non-dry build would delete the following files: {0}",
  "6357": "A non-dry build would build project '{0}'",
  "6358": "Building project '{0}'...",
  "6359": "Updating output timestamps of project '{0}'...",
  "6361": "Project '{0}' is up to date",
  "6362": "Skipping build of project '{0}' because its dependency '{1}' has errors",
  "6363": "Project '{0}' can't be built because its dependency '{1}' has errors",
  "6370": "Options '{0}' and '{1}' cannot be combined.",
  "6371": "Updating unchanged output timestamps of project '{0}'...",
  "6374": "A non-dry build would update timestamps for output of project '{0}'",
  "6377": "Cannot write file '{0}' because it will overwrite '.tsbuildinfo' file generated by referenced project '{1}'",
  "6381": "Project '{0}' is out of date because output for it was generated with version '{1}' that differs with current version '{2}'",
  "6382": "Skipping build of project '{0}' because its dependency '{1}' was not built",
  "6383": "Project '{0}' can't be built because its dependency '{1}' was not built",
  "6385": "'{0}' is deprecated.",
  "6387": "The signature '{0}' of '{1}' is deprecated.",
  "6388": "Project '{0}' is being forcibly rebuilt",
  "6389": "Reusing resolution of module '{0}' from '{1}' of old program, it was not resolved.",
  "6390": "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}'.",
  "6391": "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'.",
  "6392": "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was not resolved.",
  "6393": "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'.",
  "6394": "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'.",
  "6395": "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was not resolved.",
  "6396": "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'.",
  "6397": "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'.",
  "6398": "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was not resolved.",
  "6399": "Project '{0}' is out of date because buildinfo file '{1}' indicates that some of the changes were not emitted",
  "6400": "Project '{0}' is up to date but needs to update timestamps of output files that are older than input files",
  "6401": "Project '{0}' is out of date because there was error reading file '{1}'",
  "6402": "Resolving in {0} mode with conditions {1}.",
  "6403": "Matched '{0}' condition '{1}'.",
  "6404": "Using '{0}' subpath '{1}' with target '{2}'.",
  "6405": "Saw non-matching condition '{0}'.",
  "6406": "Project '{0}' is out of date because buildinfo file '{1}' indicates there is change in compilerOptions",
  "6412": "Project '{0}' is out of date because buildinfo file '{1}' indicates that file '{2}' was root file of compilation but not any more.",
  "6414": "Resolved under condition '{0}'.",
  "6415": "Failed to resolve under condition '{0}'.",
  "6417": "Searching all ancestor node_modules directories for preferred extensions: {0}.",
  "6418": "Searching all ancestor node_modules directories for fallback extensions: {0}.",
  "6419": "Project '{0}' is out of date because buildinfo file '{1}' indicates that program needs to report errors.",
  "6420": "Project '{0}' is out of date because {1}.",
  "6500": "The expected type comes from property '{0}' which is declared here on type '{1}'",
  "6504": "File '{0}' is a JavaScript file. Did you mean to enable the 'allowJs' option?",
  "6807": "This operation can be simplified. This shift is identical to `{0} {1} {2}`.",
  "6913": "You can learn about all of the compiler options at {0}",
  "6915": "Using --build, -b will make tsc behave more like a build orchestrator than a compiler. This is used to trigger building composite projects which you can learn more about at {0}",
  "7005": "Variable '{0}' implicitly has an '{1}' type.",
  "7006": "Parameter '{0}' implicitly has an '{1}' type.",
  "7008": "Member '{0}' implicitly has an '{1}' type.",
  "7010": "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.",
  "7011": "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.",
  "7012": "This overload implicitly returns the type '{0}' because it lacks a return type annotation.",
  "7014": "Function type, which lacks return-type annotation, implicitly has an '{0}' return type.",
  "7016": "Could not find a declaration file for module '{0}'. '{1}' implicitly has an 'any' type.",
  "7017": "Element implicitly has an 'any' type because type '{0}' has no index signature.",
  "7018": "Object literal's property '{0}' implicitly has an '{1}' type.",
  "7019": "Rest parameter '{0}' implicitly has an 'any[]' type.",
  "7022": "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.",
  "7023": "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
  "7025": "Generator implicitly has yield type '{0}'. Consider supplying a return type annotation.",
  "7026": "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists.",
  "7031": "Binding element '{0}' implicitly has an '{1}' type.",
  "7032": "Property '{0}' implicitly has type 'any', because its set accessor lacks a parameter type annotation.",
  "7033": "Property '{0}' implicitly has type 'any', because its get accessor lacks a return type annotation.",
  "7034": "Variable '{0}' implicitly has type '{1}' in some locations where its type cannot be determined.",
  "7035": "Try `npm i --save-dev @types/{1}` if it exists or add a new declaration (.d.ts) file containing `declare module '{0}';`",
  "7036": "Dynamic import's specifier must be of type 'string', but here has type '{0}'.",
  "7040": "If the '{0}' package actually exposes this module, consider sending a pull request to amend 'https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/{1}'",
  "7042": "Module '{0}' was resolved to '{1}', but '--resolveJsonModule' is not used.",
  "7043": "Variable '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage.",
  "7044": "Parameter '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage.",
  "7045": "Member '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage.",
  "7046": "Variable '{0}' implicitly has type '{1}' in some locations, but a better type may be inferred from usage.",
  "7047": "Rest parameter '{0}' implicitly has an 'any[]' type, but a better type may be inferred from usage.",
  "7048": "Property '{0}' implicitly has type 'any', but a better type for its get accessor may be inferred from usage.",
  "7049": "Property '{0}' implicitly has type 'any', but a better type for its set accessor may be inferred from usage.",
  "7050": "'{0}' implicitly has an '{1}' return type, but a better type may be inferred from usage.",
  "7051": "Parameter has a name but no type. Did you mean '{0}: {1}'?",
  "7052": "Element implicitly has an 'any' type because type '{0}' has no index signature. Did you mean to call '{1}'?",
  "7053": "Element implicitly has an 'any' type because expression of type '{0}' can't be used to index type '{1}'.",
  "7054": "No index signature with a parameter of type '{0}' was found on type '{1}'.",
  "7055": "'{0}', which lacks return-type annotation, implicitly has an '{1}' yield type.",
  "7058": "If the '{0}' package actually exposes this module, try adding a new declaration (.d.ts) file containing `declare module '{1}';`",
  "8006": "'{0}' declarations can only be used in TypeScript files.",
  "8009": "The '{0}' modifier can only be used in TypeScript files.",
  "8022": "JSDoc '@{0}' is not attached to a class.",
  "8023": "JSDoc '@{0} {1}' does not match the 'extends {2}' clause.",
  "8024": "JSDoc '@param' tag has name '{0}', but there is no parameter with that name.",
  "8026": "Expected {0} type arguments; provide these with an '@extends' tag.",
  "8027": "Expected {0}-{1} type arguments; provide these with an '@extends' tag.",
  "8029": "JSDoc '@param' tag has name '{0}', but there is no parameter with that name. It would match 'arguments' if it had an array type.",
  "8032": "Qualified name '{0}' is not allowed without a leading '@param {object} {1}'.",
  "9005": "Declaration emit for this file requires using private name '{0}'. An explicit type annotation may unblock declaration emit.",
  "9006": "Declaration emit for this file requires using private name '{0}' from module '{1}'. An explicit type annotation may unblock declaration emit.",
  "9027": "Add a type annotation to the variable {0}.",
  "9028": "Add a type annotation to the parameter {0}.",
  "9029": "Add a type annotation to the property {0}.",
  "9039": "Type containing private name '{0}' can't be used with --isolatedDeclarations.",
  "17002": "Expected corresponding JSX closing tag for '{0}'.",
  "17006": "An unary expression with the '{0}' operator is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses.",
  "17008": "JSX element '{0}' has no corresponding closing tag.",
  "17010": "Unknown type acquisition option '{0}'.",
  "17012": "'{0}' is not a valid meta-property for keyword '{1}'. Did you mean '{2}'?",
  "17013": "Meta-property '{0}' is only allowed in the body of a function declaration, function expression, or constructor.",
  "17018": "Unknown type acquisition option '{0}'. Did you mean '{1}'?",
  "17019": "'{0}' at the end of a type is not valid TypeScript syntax. Did you mean to write '{1}'?",
  "17020": "'{0}' at the start of a type is not valid TypeScript syntax. Did you mean to write '{1}'?",
  "18000": "Circularity detected while resolving configuration: {0}",
  "18002": "The 'files' list in config file '{0}' is empty.",
  "18003": "No inputs were found in config file '{0}'. Specified 'include' paths were '{1}' and 'exclude' paths were '{2}'.",
  "18004": "No value exists in scope for the shorthand property '{0}'. Either declare one or provide an initializer.",
  "18013": "Property '{0}' is not accessible outside class '{1}' because it has a private identifier.",
  "18014": "The property '{0}' cannot be accessed on type '{1}' within this class because it is shadowed by another private identifier with the same spelling.",
  "18015": "Property '{0}' in type '{1}' refers to a different member that cannot be accessed from within type '{2}'.",
  "18017": "The shadowing declaration of '{0}' is defined here",
  "18018": "The declaration of '{0}' that you probably intended to use is defined here",
  "18019": "'{0}' modifier cannot be used with a private identifier.",
  "18027": "Compiler reserves name '{0}' when emitting private identifier downlevel.",
  "18031": "The intersection '{0}' was reduced to 'never' because property '{1}' has conflicting types in some constituents.",
  "18032": "The intersection '{0}' was reduced to 'never' because property '{1}' exists in multiple constituents and is private in some.",
  "18033": "Type '{0}' is not assignable to type '{1}' as required for computed enum member values.",
  "18035": "Invalid value for 'jsxFragmentFactory'. '{0}' is not a valid identifier or qualified-name.",
  "18039": "Invalid use of '{0}'. It cannot be used inside a class static block.",
  "18042": "'{0}' is a type and cannot be imported in JavaScript files. Use '{1}' in a JSDoc type annotation.",
  "18044": "'{0}' is automatically exported here.",
  "18046": "'{0}' is of type 'unknown'.",
  "18047": "'{0}' is possibly 'null'.",
  "18048": "'{0}' is possibly 'undefined'.",
  "18049": "'{0}' is possibly 'null' or 'undefined'.",
  "18050": "The value '{0}' cannot be used here.",
  "18051": "Compiler option '{0}' cannot be given an empty string.",
  "18053": "Its type '{0}' is not a valid JSX element type.",
  "18055": "'{0}' has a string type, but must have syntactically recognizable string syntax when 'isolatedModules' is enabled.",
  "18061": "'{0}' is not a valid meta-property for keyword 'import'. Did you mean 'meta' or 'defer'?",
  "90004": "Remove unused declaration for: '{0}'",
  "90005": "Remove import from '{0}'",
  "90006": "Implement interface '{0}'",
  "90008": "Add '{0}.' to unresolved variable",
  "90013": "Import '{0}' from \"{1}\"",
  "90014": "Change '{0}' to '{1}'",
  "90016": "Declare property '{0}'",
  "90017": "Add index signature for property '{0}'",
  "90020": "Initialize property '{0}' in the constructor",
  "90021": "Initialize static property '{0}'",
  "90022": "Change spelling to '{0}'",
  "90023": "Declare method '{0}'",
  "90024": "Declare static method '{0}'",
  "90025": "Prefix '{0}' with an underscore",
  "90026": "Rewrite as the indexed access type '{0}'",
  "90027": "Declare static property '{0}'",
  "90030": "Replace 'infer {0}' with 'unknown'",
  "90035": "Declare private property '{0}'",
  "90036": "Replace '{0}' with 'Promise<{1}>'",
  "90038": "Declare private method '{0}'",
  "90041": "Remove unused declarations for: '{0}'",
  "90053": "Declare a private field named '{0}'.",
  "90054": "Includes imports of types referenced by '{0}'",
  "90055": "Remove 'type' from import declaration from \"{0}\"",
  "90056": "Remove 'type' from import of '{0}' from \"{1}\"",
  "90057": "Add import from \"{0}\"",
  "90058": "Update import from \"{0}\"",
  "90059": "Export '{0}' from module '{1}'",
  "90061": "Update modifiers of '{0}'",
  "90062": "Add annotation of type '{0}'",
  "90063": "Add return type '{0}'",
  "90068": "Add satisfies and an inline type assertion with '{0}'",
  "90069": "Extract to variable and replace with '{0} as typeof {0}'",
  "95003": "Convert '{0}' to '{1} in {0}'",
  "95004": "Extract to {0} in {1}",
  "95007": "Extract to {0} in enclosing scope",
  "95008": "Extract to {0} in {1} scope",
  "95011": "Infer type of '{0}' from usage",
  "95014": "Install '{0}'",
  "95015": "Replace import with '{0}'.",
  "95018": "Add 'undefined' type to property '{0}'",
  "95019": "Add initializer to property '{0}'",
  "95020": "Add definite assignment assertion to property '{0}'",
  "95055": "Convert '{0}' to mapped object type",
  "95063": "Add missing enum member '{0}'",
  "95080": "Infer 'this' type of '{0}' from usage",
  "95084": "Add 'await' to initializer for '{0}'",
  "95098": "Set the 'target' option in your configuration file to '{0}'",
  "95099": "Set the 'module' option in your configuration file to '{0}'",
  "95105": "Convert function expression '{0}' to arrow function",
  "95106": "Convert function declaration '{0}' to arrow function",
  "95138": "Switch each misused '{0}' to '{1}'",
  "95145": "Use element access for '{0}'",
  "95156": "Add missing function declaration '{0}'",
  "95171": "Delete unused '@param' tag '{0}'",
  "95173": "Rename '@param' tag name '{0}' to '{1}'",
  "95174": "Use `{0}`.",
  "95181": "Use 'type {0}'",
  "95187": "Add missing comma for object member completion '{0}'.",
  "95188": "Add missing parameter to '{0}'",
  "95189": "Add missing parameters to '{0}'",
  "95191": "Add optional parameter to '{0}'",
  "95192": "Add optional parameters to '{0}'"
}